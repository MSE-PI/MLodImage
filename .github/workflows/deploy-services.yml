# This is a workflow to deploy all services to k8s cluster
name: deploy-services-workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup k8s access to kubectl
        env:
          KUBERNETES: ${{ secrets.KUBERNETES }}
        run: |
          mkdir --parent ~/.kube
          echo $KUBERNETES | base64 -d > ~/.kube/config

      - name: Setup credentials secret in k8s
        env:
          NAMESPACE: ${{ vars.SERVICE_NAMESPACE }}
          MINIO_USR: ${{ secrets.MINIO_USR }}
          MINIO_PWD: ${{ secrets.MINIO_PWD }}
          TRAIN_BRANCH: ${{ vars.TRAIN_BRANCH }}
          GIT_USER: ${{ secrets.REGISTRY_USER }}
          GIT_PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          envsubst < code/k8s/cred-secret.yml | kubectl apply -n $NAMESPACE -f -

      - name: Log in to github registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ghcr.io -u ${{ secrets.REGISTRY_USER }} --password-stdin

      - name: Setup github container registry credentials in k8s
        run: |
          kubectl -n ${{ vars.SERVICE_NAMESPACE }} create secret docker-registry github-cred --docker-server=ghcr.io --docker-username=${{ secrets.REGISTRY_USER }} --docker-password=${{ secrets.REGISTRY_TOKEN }} -o yaml --save-config --dry-run=client | kubectl apply -f -


      - name: Run python script
        env:
          NAMESPACE: ${{ vars.SERVICE_NAMESPACE }}
          DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
          PYTHONUNBUFFERED: 1
        run: |
          cd code/services
          python3 deploy-script.py 
          
